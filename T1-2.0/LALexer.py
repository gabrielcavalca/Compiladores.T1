# Generated from LA.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,23,403,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,293,8,0,
        1,1,4,1,296,8,1,11,1,12,1,297,1,2,4,2,301,8,2,11,2,12,2,302,1,2,
        1,2,4,2,307,8,2,11,2,12,2,308,1,3,1,3,5,3,313,8,3,10,3,12,3,316,
        9,3,1,3,3,3,319,8,3,1,4,1,4,1,4,1,4,5,4,325,8,4,10,4,12,4,328,9,
        4,1,4,1,4,1,5,1,5,5,5,334,8,5,10,5,12,5,337,9,5,1,5,1,5,1,5,1,5,
        1,6,1,6,5,6,345,8,6,10,6,12,6,348,9,6,1,6,3,6,351,8,6,1,7,4,7,354,
        8,7,11,7,12,7,355,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,
        12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,14,3,14,380,
        8,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,
        1,20,1,21,1,21,5,21,397,8,21,10,21,12,21,400,9,21,1,22,1,22,0,0,
        23,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,1,
        0,10,1,0,48,57,2,0,10,10,34,34,1,1,10,10,3,0,10,10,13,13,34,34,2,
        0,10,10,125,125,3,0,9,10,13,13,32,32,4,0,37,37,42,43,45,45,47,47,
        2,0,91,91,93,93,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,
        122,451,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,
        0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,
        0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,
        0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,
        0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,1,292,1,0,0,0,3,295,1,
        0,0,0,5,300,1,0,0,0,7,310,1,0,0,0,9,320,1,0,0,0,11,331,1,0,0,0,13,
        342,1,0,0,0,15,353,1,0,0,0,17,359,1,0,0,0,19,361,1,0,0,0,21,363,
        1,0,0,0,23,365,1,0,0,0,25,367,1,0,0,0,27,369,1,0,0,0,29,379,1,0,
        0,0,31,381,1,0,0,0,33,383,1,0,0,0,35,385,1,0,0,0,37,387,1,0,0,0,
        39,389,1,0,0,0,41,391,1,0,0,0,43,394,1,0,0,0,45,401,1,0,0,0,47,48,
        5,97,0,0,48,49,5,108,0,0,49,50,5,103,0,0,50,51,5,111,0,0,51,52,5,
        114,0,0,52,53,5,105,0,0,53,54,5,116,0,0,54,55,5,109,0,0,55,293,5,
        111,0,0,56,57,5,102,0,0,57,58,5,105,0,0,58,59,5,109,0,0,59,60,5,
        95,0,0,60,61,5,97,0,0,61,62,5,108,0,0,62,63,5,103,0,0,63,64,5,111,
        0,0,64,65,5,114,0,0,65,66,5,105,0,0,66,67,5,116,0,0,67,68,5,109,
        0,0,68,293,5,111,0,0,69,70,5,100,0,0,70,71,5,101,0,0,71,72,5,99,
        0,0,72,73,5,108,0,0,73,74,5,97,0,0,74,75,5,114,0,0,75,293,5,101,
        0,0,76,77,5,108,0,0,77,78,5,101,0,0,78,79,5,105,0,0,79,293,5,97,
        0,0,80,81,5,101,0,0,81,82,5,115,0,0,82,83,5,99,0,0,83,84,5,114,0,
        0,84,85,5,101,0,0,85,86,5,118,0,0,86,293,5,97,0,0,87,88,5,108,0,
        0,88,89,5,105,0,0,89,90,5,116,0,0,90,91,5,101,0,0,91,92,5,114,0,
        0,92,93,5,97,0,0,93,293,5,108,0,0,94,95,5,105,0,0,95,96,5,110,0,
        0,96,97,5,116,0,0,97,98,5,101,0,0,98,99,5,105,0,0,99,100,5,114,0,
        0,100,293,5,111,0,0,101,102,5,114,0,0,102,103,5,101,0,0,103,104,
        5,97,0,0,104,293,5,108,0,0,105,106,5,108,0,0,106,107,5,111,0,0,107,
        108,5,103,0,0,108,109,5,105,0,0,109,110,5,99,0,0,110,293,5,111,0,
        0,111,112,5,99,0,0,112,113,5,111,0,0,113,114,5,110,0,0,114,115,5,
        115,0,0,115,116,5,116,0,0,116,117,5,97,0,0,117,118,5,110,0,0,118,
        119,5,116,0,0,119,293,5,101,0,0,120,121,5,118,0,0,121,122,5,101,
        0,0,122,123,5,114,0,0,123,124,5,100,0,0,124,125,5,97,0,0,125,126,
        5,100,0,0,126,127,5,101,0,0,127,128,5,105,0,0,128,129,5,114,0,0,
        129,293,5,111,0,0,130,131,5,102,0,0,131,132,5,97,0,0,132,133,5,108,
        0,0,133,134,5,115,0,0,134,293,5,111,0,0,135,136,5,115,0,0,136,293,
        5,101,0,0,137,138,5,101,0,0,138,139,5,110,0,0,139,140,5,116,0,0,
        140,141,5,97,0,0,141,293,5,111,0,0,142,143,5,115,0,0,143,144,5,101,
        0,0,144,145,5,110,0,0,145,146,5,97,0,0,146,293,5,111,0,0,147,148,
        5,102,0,0,148,149,5,105,0,0,149,150,5,109,0,0,150,151,5,95,0,0,151,
        152,5,115,0,0,152,293,5,101,0,0,153,154,5,99,0,0,154,155,5,97,0,
        0,155,156,5,115,0,0,156,293,5,111,0,0,157,158,5,115,0,0,158,159,
        5,101,0,0,159,160,5,106,0,0,160,293,5,97,0,0,161,162,5,102,0,0,162,
        163,5,105,0,0,163,164,5,109,0,0,164,165,5,95,0,0,165,166,5,99,0,
        0,166,167,5,97,0,0,167,168,5,115,0,0,168,293,5,111,0,0,169,170,5,
        112,0,0,170,171,5,97,0,0,171,172,5,114,0,0,172,293,5,97,0,0,173,
        174,5,97,0,0,174,175,5,116,0,0,175,293,5,101,0,0,176,177,5,102,0,
        0,177,178,5,97,0,0,178,179,5,99,0,0,179,293,5,97,0,0,180,181,5,102,
        0,0,181,182,5,105,0,0,182,183,5,109,0,0,183,184,5,95,0,0,184,185,
        5,112,0,0,185,186,5,97,0,0,186,187,5,114,0,0,187,293,5,97,0,0,188,
        189,5,101,0,0,189,190,5,110,0,0,190,191,5,113,0,0,191,192,5,117,
        0,0,192,193,5,97,0,0,193,194,5,110,0,0,194,195,5,116,0,0,195,293,
        5,111,0,0,196,197,5,102,0,0,197,198,5,105,0,0,198,199,5,109,0,0,
        199,200,5,95,0,0,200,201,5,101,0,0,201,202,5,110,0,0,202,203,5,113,
        0,0,203,204,5,117,0,0,204,205,5,97,0,0,205,206,5,110,0,0,206,207,
        5,116,0,0,207,293,5,111,0,0,208,209,5,114,0,0,209,210,5,101,0,0,
        210,211,5,103,0,0,211,212,5,105,0,0,212,213,5,115,0,0,213,214,5,
        116,0,0,214,215,5,114,0,0,215,293,5,111,0,0,216,217,5,102,0,0,217,
        218,5,105,0,0,218,219,5,109,0,0,219,220,5,95,0,0,220,221,5,114,0,
        0,221,222,5,101,0,0,222,223,5,103,0,0,223,224,5,105,0,0,224,225,
        5,115,0,0,225,226,5,116,0,0,226,227,5,114,0,0,227,293,5,111,0,0,
        228,229,5,116,0,0,229,230,5,105,0,0,230,231,5,112,0,0,231,293,5,
        111,0,0,232,233,5,112,0,0,233,234,5,114,0,0,234,235,5,111,0,0,235,
        236,5,99,0,0,236,237,5,101,0,0,237,238,5,100,0,0,238,239,5,105,0,
        0,239,240,5,109,0,0,240,241,5,101,0,0,241,242,5,110,0,0,242,243,
        5,116,0,0,243,293,5,111,0,0,244,245,5,102,0,0,245,246,5,105,0,0,
        246,247,5,109,0,0,247,248,5,95,0,0,248,249,5,112,0,0,249,250,5,114,
        0,0,250,251,5,111,0,0,251,252,5,99,0,0,252,253,5,101,0,0,253,254,
        5,100,0,0,254,255,5,105,0,0,255,256,5,109,0,0,256,257,5,101,0,0,
        257,258,5,110,0,0,258,259,5,116,0,0,259,293,5,111,0,0,260,261,5,
        102,0,0,261,262,5,117,0,0,262,263,5,110,0,0,263,264,5,99,0,0,264,
        265,5,97,0,0,265,293,5,111,0,0,266,267,5,102,0,0,267,268,5,105,0,
        0,268,269,5,109,0,0,269,270,5,95,0,0,270,271,5,102,0,0,271,272,5,
        117,0,0,272,273,5,110,0,0,273,274,5,99,0,0,274,275,5,97,0,0,275,
        293,5,111,0,0,276,277,5,114,0,0,277,278,5,101,0,0,278,279,5,116,
        0,0,279,280,5,111,0,0,280,281,5,114,0,0,281,282,5,110,0,0,282,293,
        5,101,0,0,283,284,5,118,0,0,284,285,5,97,0,0,285,293,5,114,0,0,286,
        293,5,101,0,0,287,288,5,111,0,0,288,293,5,117,0,0,289,290,5,110,
        0,0,290,291,5,97,0,0,291,293,5,111,0,0,292,47,1,0,0,0,292,56,1,0,
        0,0,292,69,1,0,0,0,292,76,1,0,0,0,292,80,1,0,0,0,292,87,1,0,0,0,
        292,94,1,0,0,0,292,101,1,0,0,0,292,105,1,0,0,0,292,111,1,0,0,0,292,
        120,1,0,0,0,292,130,1,0,0,0,292,135,1,0,0,0,292,137,1,0,0,0,292,
        142,1,0,0,0,292,147,1,0,0,0,292,153,1,0,0,0,292,157,1,0,0,0,292,
        161,1,0,0,0,292,169,1,0,0,0,292,173,1,0,0,0,292,176,1,0,0,0,292,
        180,1,0,0,0,292,188,1,0,0,0,292,196,1,0,0,0,292,208,1,0,0,0,292,
        216,1,0,0,0,292,228,1,0,0,0,292,232,1,0,0,0,292,244,1,0,0,0,292,
        260,1,0,0,0,292,266,1,0,0,0,292,276,1,0,0,0,292,283,1,0,0,0,292,
        286,1,0,0,0,292,287,1,0,0,0,292,289,1,0,0,0,293,2,1,0,0,0,294,296,
        7,0,0,0,295,294,1,0,0,0,296,297,1,0,0,0,297,295,1,0,0,0,297,298,
        1,0,0,0,298,4,1,0,0,0,299,301,7,0,0,0,300,299,1,0,0,0,301,302,1,
        0,0,0,302,300,1,0,0,0,302,303,1,0,0,0,303,304,1,0,0,0,304,306,5,
        46,0,0,305,307,7,0,0,0,306,305,1,0,0,0,307,308,1,0,0,0,308,306,1,
        0,0,0,308,309,1,0,0,0,309,6,1,0,0,0,310,314,5,34,0,0,311,313,8,1,
        0,0,312,311,1,0,0,0,313,316,1,0,0,0,314,312,1,0,0,0,314,315,1,0,
        0,0,315,318,1,0,0,0,316,314,1,0,0,0,317,319,7,2,0,0,318,317,1,0,
        0,0,319,8,1,0,0,0,320,326,5,34,0,0,321,325,8,3,0,0,322,323,5,34,
        0,0,323,325,5,34,0,0,324,321,1,0,0,0,324,322,1,0,0,0,325,328,1,0,
        0,0,326,324,1,0,0,0,326,327,1,0,0,0,327,329,1,0,0,0,328,326,1,0,
        0,0,329,330,5,34,0,0,330,10,1,0,0,0,331,335,5,123,0,0,332,334,8,
        4,0,0,333,332,1,0,0,0,334,337,1,0,0,0,335,333,1,0,0,0,335,336,1,
        0,0,0,336,338,1,0,0,0,337,335,1,0,0,0,338,339,5,125,0,0,339,340,
        1,0,0,0,340,341,6,5,0,0,341,12,1,0,0,0,342,346,5,123,0,0,343,345,
        8,4,0,0,344,343,1,0,0,0,345,348,1,0,0,0,346,344,1,0,0,0,346,347,
        1,0,0,0,347,350,1,0,0,0,348,346,1,0,0,0,349,351,7,2,0,0,350,349,
        1,0,0,0,351,14,1,0,0,0,352,354,7,5,0,0,353,352,1,0,0,0,354,355,1,
        0,0,0,355,353,1,0,0,0,355,356,1,0,0,0,356,357,1,0,0,0,357,358,6,
        7,0,0,358,16,1,0,0,0,359,360,5,34,0,0,360,18,1,0,0,0,361,362,5,40,
        0,0,362,20,1,0,0,0,363,364,5,41,0,0,364,22,1,0,0,0,365,366,5,44,
        0,0,366,24,1,0,0,0,367,368,5,58,0,0,368,26,1,0,0,0,369,370,5,60,
        0,0,370,371,5,45,0,0,371,28,1,0,0,0,372,373,5,60,0,0,373,380,5,61,
        0,0,374,375,5,62,0,0,375,380,5,61,0,0,376,377,5,60,0,0,377,380,5,
        62,0,0,378,380,2,60,62,0,379,372,1,0,0,0,379,374,1,0,0,0,379,376,
        1,0,0,0,379,378,1,0,0,0,380,30,1,0,0,0,381,382,7,6,0,0,382,32,1,
        0,0,0,383,384,5,46,0,0,384,34,1,0,0,0,385,386,5,38,0,0,386,36,1,
        0,0,0,387,388,7,7,0,0,388,38,1,0,0,0,389,390,5,94,0,0,390,40,1,0,
        0,0,391,392,5,46,0,0,392,393,5,46,0,0,393,42,1,0,0,0,394,398,7,8,
        0,0,395,397,7,9,0,0,396,395,1,0,0,0,397,400,1,0,0,0,398,396,1,0,
        0,0,398,399,1,0,0,0,399,44,1,0,0,0,400,398,1,0,0,0,401,402,9,0,0,
        0,402,46,1,0,0,0,15,0,292,297,302,308,314,318,324,326,335,346,350,
        355,379,398,1,6,0,0
    ]

class LALexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    PALAVRA_CHAVE = 1
    NUM_INT = 2
    NUM_REAL = 3
    CADEIA_NAO_FECHADA = 4
    CADEIA = 5
    COMENTARIO = 6
    COMENTARIO_NAO_FECHADO = 7
    WS = 8
    ASPAS = 9
    ABREPAR = 10
    FECHAPAR = 11
    VIRG = 12
    DOIS_PONTOS = 13
    ATRIBUICAO = 14
    OP_RELACIONAL = 15
    OP_ARITMETICO = 16
    PONTO = 17
    E_COMERCIAL = 18
    COLCHETES = 19
    CIRCUNFLEXO = 20
    PONTOS = 21
    IDENT = 22
    ERRO = 23

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\"'", "'('", "')'", "','", "':'", "'<-'", "'.'", "'&'", "'^'", 
            "'..'" ]

    symbolicNames = [ "<INVALID>",
            "PALAVRA_CHAVE", "NUM_INT", "NUM_REAL", "CADEIA_NAO_FECHADA", 
            "CADEIA", "COMENTARIO", "COMENTARIO_NAO_FECHADO", "WS", "ASPAS", 
            "ABREPAR", "FECHAPAR", "VIRG", "DOIS_PONTOS", "ATRIBUICAO", 
            "OP_RELACIONAL", "OP_ARITMETICO", "PONTO", "E_COMERCIAL", "COLCHETES", 
            "CIRCUNFLEXO", "PONTOS", "IDENT", "ERRO" ]

    ruleNames = [ "PALAVRA_CHAVE", "NUM_INT", "NUM_REAL", "CADEIA_NAO_FECHADA", 
                  "CADEIA", "COMENTARIO", "COMENTARIO_NAO_FECHADO", "WS", 
                  "ASPAS", "ABREPAR", "FECHAPAR", "VIRG", "DOIS_PONTOS", 
                  "ATRIBUICAO", "OP_RELACIONAL", "OP_ARITMETICO", "PONTO", 
                  "E_COMERCIAL", "COLCHETES", "CIRCUNFLEXO", "PONTOS", "IDENT", 
                  "ERRO" ]

    grammarFileName = "LA.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


